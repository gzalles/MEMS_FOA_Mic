## Copyright (C) 2021 Gabriel Zalles#### This program is free software: you can redistribute it and/or modify## it under the terms of the GNU General Public License as published by## the Free Software Foundation, either version 3 of the License, or## (at your option) any later version.#### This program is distributed in the hope that it will be useful,## but WITHOUT ANY WARRANTY; without even the implied warranty of## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the## GNU General Public License for more details.#### You should have received a copy of the GNU General Public License## along with this program.  If not, see <https://www.gnu.org/licenses/>.## -*- texinfo -*-## @deftypefn {} {@var{retval} =} dfr_s (@var{input1}, @var{input2})#### @seealso{}## @end deftypefn## Author: Gabriel Zalles <gabrielzalles@Gabriels-MacBook-Pro.local>## Created: 2021-10-22% script testing out speaker compensation.%% the ir was measured using REW and the calib file of the U-MIK. then we simply % export the measurement with default windowing and min-phase applied. the system% we assume takes the calib file into account. the delay was not removed.close all;clear all;clc;cd spkr-resp; %cd to dir with meas[x, Fs] = audioread("MA329-win-on-min-phase-calib.wav");cd .. %cd back to main folder xlen = length(x)/Fs; %length of x in secondsTs = 1/Fs; %sampling periodt = 0:Ts:xlen-Ts; %time vector for plotting #figure(1)plot(t, x);Nfft = 2^12; #size of FFT binRes = Fs/Nfft; #bin resolution in HzNyq = Fs/2; #nyquist limitfreqVec = linspace(0, Fs/2, Nfft/2); #freq vector for plotting X = fft(x, Nfft); #FFTXmag = abs(X); #get magfigure(2);plot(freqVec, 20*log10(Xmag(1:end/2)));%I think we need to try to get a better meas. I don't like the spike I am seeing. 